package entities;

import java.util.ArrayList;
import java.util.List;

import utilities.Operator;

public class Distillation4 {
	//Attributtes
	protected Double z;
	protected Double xb;
	protected Double xd;
	protected ELV brain;
	protected List<Double> elvDiagramX;
	protected List<Double> elvDiagramY;
	protected List<Double> elvDiagramT;
	//Constructors
	public Distillation4(Double z, Double xd, Double xb, ELV brain) {
		this.z = z;
		this.xb = xb;
		this.xd = xd;
		this.brain = brain;
	}
	public Distillation4(Double xd, Double xb, ELV brain) {
		this.xb = xb;
		this.xd = xd;
		this.brain = brain;
		this.elvDiagramX = new ArrayList();
		this.elvDiagramY = new ArrayList();
		this.elvDiagramT = new ArrayList();
		Double t;
		Double y;
		for(double i = 0; i<101; i++) {
			System.out.println(i);
			y = brain.ELVPoint((double) 0.01*i).getY();
			t = brain.ELVPoint((double) 0.01*i).getT();
			this.elvDiagramX.add(0.01*i);
			this.elvDiagramY.add(y);
			this.elvDiagramT.add(t);
		}
	}
	//Getters and setters
	public Double getZ() {
		return z;
	}
	public void setZ(Double z) {
		this.z = z;
	}
	public Double getXb() {
		return xb;
	}
	public void setXb(Double xb) {
		this.xb = xb;
	}
	public Double getXd() {
		return xd;
	}
	public void setXd(Double xd) {
		this.xd = xd;
	}
	public void setBrain(ELV brain) {
		this.brain = brain;
	}
	//Methods
	public String mccabeThieleStages() {
		StringBuilder sb = new StringBuilder();
		List<State> plateList = this.mccabeThiele2();
		System.out.println("foi2");
		for(int i = 0; i<plateList.size(); i++) {
			sb.append("Plate ");
			sb.append(i+1);
			sb.append(" --> "+plateList.get(i).toString());
		}
		return sb.toString();
	}
	public List<State> mccabeThiele2(){
		List<State> plateList = new ArrayList();
		Double currentY = xd;
		Double currentX = xd;
		Double currentT = null;
		double f, df, h;
		h = 0.0001;
		System.out.println("foiinterno1");
		while(currentY > this.xb) {
		for (int i = 0; i < 5; i++) {
			System.out.println("foiinterno laço");
			f = this.brain.ELVPoint(currentX).getY()-currentY;
			df = ((this.brain.ELVPoint(currentX+h).getY())-(this.brain.ELVPoint(currentX-h).getY()))/(2*h);
			currentX = currentX-f/df;
		}
		currentT = this.brain.ELVPoint(currentX).getT();
		plateList.add(new State(currentX,currentY,currentT));
		}
		return plateList;
	}
	public List<State> mccabeThiele(){
		List<State> plateList = new ArrayList();
		Double currentY = xd;
		Double currentX = this.brain.ELVPointByY(currentY).getX();
		Double currentT = this.brain.ELVPointByY(currentY).getT();
		State plate = new State(currentX,currentY,currentT);
		while (currentY >= xb) {
			currentY = currentX;
			currentX = this.brain.ELVPointByY(currentY).getX();
			currentT = this.brain.ELVPointByY(currentY).getT();
		}
		return plateList;
	}
}