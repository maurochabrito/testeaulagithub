package entities;

import java.util.ArrayList;
import java.util.List;

import utilities.Operator;

public class Distillation2 {
	//Attributtes
	protected Double z;
	protected Double xb;
	protected Double xd;
	protected List<Double> elvDiagramX;
	protected List<Double> elvDiagramY;
	protected List<Double> elvDiagramT;
	//Constructors
	public Distillation2(Double xb, Double xd, List<Double> elvDiagramX, List<Double> elvDiagramY,
			List<Double> elvDiagramT) {
		this.xb = xb;
		this.xd = xd;
		this.elvDiagramX = elvDiagramX;
		this.elvDiagramY = elvDiagramY;
		this.elvDiagramT = elvDiagramT;
	}

	//Getters and setters
	public Double getZ() {
		return z;
	}
	public void setZ(Double z) {
		this.z = z;
	}
	public Double getXb() {
		return xb;
	}
	public void setXb(Double xb) {
		this.xb = xb;
	}
	public Double getXd() {
		return xd;
	}
	public void setXd(Double xd) {
		this.xd = xd;
	}
	public void setBrain(ELV brain) {
		this.brain = brain;
	}
	//Methods
	public String mccabeThieleStages() {
		StringBuilder sb = new StringBuilder();
		List<State> plateList = this.mccabeThiele2();
		System.out.println("foi2");
		for(int i = 0; i<plateList.size(); i++) {
			sb.append("Plate ");
			sb.append(i+1);
			sb.append(" --> "+plateList.get(i).toString());
		}
		return sb.toString();
	}
	public List<State> mccabeThiele2(){
		List<State> plateList = new ArrayList();
		Double currentY = xd;
		Double currentX = xd;
		Double currentT = null;
		double w1,w2,wTotal;
		System.out.println(":D");
		int aux = 0;
		for (int i = 0; i < elvDiagramY.size(); i++) {
			if(currentY < elvDiagramY.get(i)) {
				aux = i;
				wTotal = elvDiagramY.get(i+1)-elvDiagramY.get(i);
				w1 = (elvDiagramY.get(i+1)-currentY)/wTotal;
				w2 = (currentY-elvDiagramY.get(i))/wTotal;
				currentX = w1*elvDiagramX.get(i)+w2*elvDiagramX.get(i+1);
				currentT = w1*elvDiagramT.get(i)+w2*elvDiagramT.get(i+1);
			}
		}
		plateList.add(new State(currentX,currentY,currentT));
		while (currentY > this.xb) {
			currentY = currentX;
			System.out.println(":D");
			aux = 0;
			for (int i = 0; i < elvDiagramY.size(); i++) {
				if(currentY < elvDiagramY.get(i)) {
					aux = i;
					wTotal = elvDiagramY.get(i+1)-elvDiagramY.get(i);
					w1 = (elvDiagramY.get(i+1)-currentY)/wTotal;
					w2 = (currentY-elvDiagramY.get(i))/wTotal;
					currentX = w1*elvDiagramX.get(i)+w2*elvDiagramX.get(i+1);
					currentT = w1*elvDiagramT.get(i)+w2*elvDiagramT.get(i+1);
				}
			}
		}
		return plateList;
	}
}