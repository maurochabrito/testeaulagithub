package entities;

import java.util.ArrayList;
import java.util.List;

import utilities.Operator;

public class Distillation {
	//Attributtes
	protected Double z;
	protected Double xb;
	protected Double xd;
	protected ELV brain;
	//Constructors
	public Distillation(Double z, Double xd, Double xb, ELV brain) {
		this.z = z;
		this.xb = xb;
		this.xd = xd;
		this.brain = brain;
	}
	public Distillation(Double xd, Double xb, ELV brain) {
		this.xb = xb;
		this.xd = xd;
		this.brain = brain;
	}
	//Getters and setters
	public Double getZ() {
		return z;
	}
	public void setZ(Double z) {
		this.z = z;
	}
	public Double getXb() {
		return xb;
	}
	public void setXb(Double xb) {
		this.xb = xb;
	}
	public Double getXd() {
		return xd;
	}
	public void setXd(Double xd) {
		this.xd = xd;
	}
	public void setBrain(ELV brain) {
		this.brain = brain;
	}
	//Methods
	public String mccabeThieleStages() {
		StringBuilder sb = new StringBuilder();
		List<State> plateList = this.mccabeThiele();
		System.out.println("foi2");
		for(int i = 0; i<plateList.size(); i++) {
			sb.append("Plate ");
			sb.append(i+1);
			sb.append(" --> "+plateList.get(i).toString());
		}
		return sb.toString();
	}
	public List<State> mccabeThiele(){
		List<State> plateList = new ArrayList();
		Double currentY = xd;
		System.out.println("foi1");
		List<Double> equilibriumLine = this.brain.ELVDiagramXY().get(1);
		List<Double> xDomain = this.brain.ELVDiagramXY().get(0);
		System.out.println("foi1");
		List<Double> horizontalLine = Operator.horizontalLine(xDomain.size()+1, currentY);
		Double currentX = Operator.intersec(xDomain, xDomain, equilibriumLine, horizontalLine).get(0);
		Double currentT = this.brain.ELVPoint(currentX).getT();
		State plate = new State(currentX,currentY,currentT);
		while (currentY >= xb) {
			currentY = currentX;
			horizontalLine = Operator.horizontalLine(xDomain.size()+1, currentY);
			currentX = Operator.intersec(xDomain, xDomain, equilibriumLine, horizontalLine).get(0);
			currentT = this.brain.ELVPoint(currentX).getT();
		}
		return plateList;
	}
}